<?php namespace Nova\Core\Login\Controllers\Base;

/**
 * All controllers in the login section of Nova extend from this base controller. 
 * This class is responsible for filling the template with the information.
 *
 * DO NOT EDIT THIS FILE!
 *
 * @package		Nova
 * @subpackage	Core
 * @category	Controllers
 * @author		Anodyne Productions
 * @copyright	2013 Anodyne Productions
 */

use Nova,
	View,
	Session,
	Location;

abstract class LoginBaseController extends \NovaBaseController {

	public function __construct()
	{
		parent::__construct();

		// Get a copy of the controller
		$me = $this;

		/**
		 * Before filter that populates some of the variables with data.
		 */
		$this->beforeFilter(function() use (&$me)
		{
			// Set the variables
			$me->skin		= Session::get('skin_login', $me->settings->skin_login);
			$me->rank		= Session::get('rank', $me->settings->rank);
			$me->timezone	= Session::get('timezone', $me->settings->timezone);

			// Resolve the catalog interface
			$catalog = Nova::resolveBinding('CatalogRepositoryInterface');

			// Get the skin section info
			$me->skinInfo	= $catalog->findSkinByLocation($me->skin);
		});
	}

	/**
	 * Setup the layout.
	 *
	 * @return	void
	 */
	protected function setupLayout()
	{
		// Set the values to be passed to the structure
		$vars = [
			'skin'		=> $this->skin,
			'skinInfo'	=> $this->skinInfo,
			'section'	=> 'login',
			'settings'	=> $this->settings,
		];

		// Setup the layout and its data
		$layout				= View::make(Location::structure('login'))->with($vars);
		$layout->title		= $this->settings->sim_name.' :: ';
		$layout->javascript	= false;
		
		// Setup the template and its data
		$layout->template			= View::make(Location::template('login'))->with($vars);
		$layout->template->ajax		= false;
		$layout->template->flash	= false;
		$layout->template->content	= false;
		$layout->template->header	= false;
		$layout->template->message	= false;

		// Pass everything back to the layout
		$this->layout = $layout;
	}

}