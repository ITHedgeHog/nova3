<?php namespace Nova\Core\Controller\Base;

/**
 * All controllers in admin sections of Nova extend from this base controller. 
 * This class is responsible for filling the template with the information 
 * that's often section specific, including setting up the navigation.
 *
 * DO NOT EDIT THIS FILE!
 *
 * @package		Nova
 * @subpackage	Core
 * @category	Controller
 * @author		Anodyne Productions
 * @copyright	2013 Anodyne Productions
 */

use View;
use Sentry;
use Utility;
use Location;
use Redirect;
use SiteContent;
use BaseController;
use SkinSectionCatalog;

abstract class Admin extends BaseController {

	public function __construct()
	{
		parent::__construct();

		/**
		 * Before any of the before filters run, check to make sure the user is
		 * logged in. If they aren't, send them over to the log in page.
		 */
		if ( ! Sentry::check())
		{
			/**
			 * Before filter that redirects if the user isn't logged in.
			 */
			$this->beforeFilter(function()
			{
				return Redirect::to('login/index/'.\Nova\Core\Controller\Login::NOT_LOGGED_IN);
			});
		}
		else
		{
			// Get a copy of the controller
			$me = $this;

			/**
			 * Before filter that populates some of the variables with data.
			 */
			$this->beforeFilter(function() use(&$me)
			{
				// Get the current user
				$user = Sentry::getUser();

				// Set the variables
				$me->skin		= $user->getPreferenceItem('skin_admin');
				$me->rank		= ($user->getPreferenceItem('rank')) ?: $me->settings->rank;
				$me->timezone	= ($user->getPreferenceItem('timezone')) ?: $me->settings->timezone;
				$me->icons		= Utility::getIconIndex($me->skin);

				// Get the skin section info
				$me->_sectionInfo = SkinSectionCatalog::getItem($me->skin, 'skin');
			});

			/**
			 * Before filter that creates the template objects.
			 */
			$this->beforeFilter(function() use(&$me)
			{
				// Set the values to be passed to the structure
				$vars = array(
					'skin'		=> $me->skin,
					'section'	=> 'admin',
					'settings'	=> $me->settings,
				);

				// Set the structure file
				$me->template = View::make(Location::file('admin', $me->skin, 'structure'))->with($vars);
				$me->template->layout = View::make(Location::file('admin', $me->skin, 'template'))->with($vars);
				$me->template->layout->navsub = View::make(Location::file('navsub', $me->skin, 'partial'));
				$me->template->layout->footer = View::make(Location::file('footer', $me->skin, 'partial'));
			});

			/**
			 * Before filter that fills the template with default data.
			 */
			$this->beforeFilter(function() use(&$me)
			{
				// Build the navigation
				$me->nav->setStyle($me->_sectionInfo->nav)
					->setSection('admin')
					->setCategory('admin')
					->setType('main');
				
				// Populate the template
				$me->template->title 					= $me->settings->sim_name.' :: ';
				$me->template->javascript				= false;
				$me->template->layout->ajax 			= false;
				$me->template->layout->flash			= false;
				$me->template->layout->content			= false;
				$me->template->layout->header			= false;
				$me->template->layout->message			= false;
				$me->template->layout->navmain 			= $me->nav->build();
				$me->template->layout->navsub->menu		= false;
				$me->template->layout->navsub->widget1	= false;
				$me->template->layout->navsub->widget2	= false;
				$me->template->layout->navsub->widget3	= false;
				$me->template->layout->footer->extra 	= SiteContent::getContentItem('footer');
			});
		}
	}

}