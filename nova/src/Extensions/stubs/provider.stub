<?php namespace {ExtensionNamespace};

use Illuminate\Support\ServiceProvider as LaravelServiceProvider;

class ServiceProvider extends LaravelServiceProvider
{
	public function boot()
	{
		/**
		 * Hooks
		 *
		 * You can quickly and easily hook into the Nova controller that's
		 * running for the current request by setting up a hook. This lets
		 * you modify the data set in the core before it's rendered to the
		 * browser. To use, simply uncomment the hook function, enter the
		 * route name (more information below), and provide your data in
		 * the callback. You may specify as many hooks as you want.
		 *
		 * The first parameter of the hook function is the name of the route
		 * you want to target. This can be found in the routes file or in the
		 * Page Manager. The second parameter is the callback that will be
		 * executed when the named route you specify is executed.
		 *
		 * The callback is passed 3 different pieces of data that you can
		 * use in your own code:
		 *
		 * The first argument passed to the callback is the controller data
		 * that will be passed to the view and the global Javascript object.
		 * You can overwrite existing data or add items to the controller
		 * data.
		 *
		 * The second argument passed to the callback is the controller
		 * instance itself. You can overwrite existing data, add new items
		 * or even call public methods from the controller instance (like
		 * the handy setPageTitle() method on the base controller).
		 *
		 * The third argument passed to the callback is the route object
		 * for the current request. This allows you to get information about
		 * the current request for logical operations. You cannot modify the
		 * route object.
		 */
		// hook('ROUTE-NAME-HERE', function ($data, $controller, $route) {
		// 	//
		// });
	}

	public function register()
	{
		$extension = new Extension('{ExtensionVendorName}', $this->app);

		// Register a singleton for the extension class
		$this->app->singleton('{ExtensionKey}', $extension);
	}
}
